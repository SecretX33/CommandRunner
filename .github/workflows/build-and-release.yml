name: Build and Release

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: Build mode
        type: choice
        required: true
        default: build and release
        options:
          - build and release
          - build and release (force)
          - build only
      version_tag:
        description: Version tag (e.g. 1.2.5, empty to use the one defined in build.gradle.kts)
        type: string
        required: false
      release_name:
        description: Release name (e.g. v1.2.5, empty to generate one automatically)
        type: string
        required: false

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    secrets: inherit

  release:
    runs-on: ubuntu-latest
    name: Release
    needs: build
    permissions:
      contents: write
    if: success() && (inputs.build_mode == 'build and release' || inputs.build_mode == 'build and release (force)')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List dist folder contents
        run: |
          echo GitHub ref is: ${{ github.ref }}
          echo === Current folder ===
          pwd
          echo === Root folder contents ===
          ls -la
          echo === Dist folder contents ===
          find dist -print -ls

      - name: Move artifacts
        run: |
          mkdir -v -p dist
          find dist -mindepth 2 -type f -exec mv -v -t dist/ {} \;
          find dist -type f -empty -print -delete -o -type d -empty -print -delete

      - name: List dist folder contents
        run: |
          echo GitHub ref is: ${{ github.ref }}
          echo === Current folder ===
          pwd
          echo === Root folder contents ===
          ls -la
          echo === Dist folder contents ===
          find dist -print -ls

      - name: Set version
        id: version
        run: |
          version="${{ inputs.version_tag }}"
          if [ -z "$version" ]; then
            version=$(grep 'version =' build.gradle.kts | awk '{print $3}' | tr -d '"' | tr -d ' ')
          fi
          echo "New version is: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set release name
        id: release_name
        run: |
          release_name="${{ inputs.release_name }}"
          if [ -z "$release_name" ]; then
            release_name=v${{ steps.version.outputs.version }}
          fi
          echo "New release_name is: $release_name"
          echo "release_name=$release_name" >> $GITHUB_OUTPUT

      - name: Delete existing tag and release (only forced releases)
        if: inputs.build_mode == 'build and release (force)'
        run: |
          gh release delete ${{ steps.version.outputs.version }} -y  --cleanup-tag
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.release_name.outputs.release_name }}
          tag_name: ${{ steps.version.outputs.version }}
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ./dist/*
